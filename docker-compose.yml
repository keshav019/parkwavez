version: "3"
services:
  api-gateway:
    container_name: api-gateway
    build: api-gateway/
    restart: always
    ports:
      - "8004:8004"
    depends_on:
      - eureka-server
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/

  eureka-server:
    container_name: eureka-server
    build: eureka-server/
    restart: always
    ports:
      - "8761:8761"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  elasticsearch-service:
    container_name: elasticsearch
    image: elasticsearch:7.17.12
    ports:
      - "9200:9200"
    environment:
      - cluster.name=elasticsearch
      - 'CLI_JAVA_OPTS=-Xms2g -Xmx2g'
      - 'bootstrap.memory_lock=true'
      - 'discovery.type=single-node'
    ulimits:
      memlock:
        soft: -1
        hard: -1

  parking-provider-service:
    container_name: parking-provider-service
    build: parking-provider-service/
    restart: always
    ports:
      - "8085:8085"
    environment:
      - spring.data.elasticsearch.cluster-nodes=elasticsearch-service:9200
      - spring.data.elasticsearch.cluster-name=elasticsearch
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.kafka.producer.bootstrap-servers=broker:9092
    depends_on:
      - eureka-server
      - elasticsearch-service
      - api-gateway
      - broker

  mysql-service:
    container_name: mysql-server
    image: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345

  authentication-service:
    container_name: authentication-service
    build: UserAuthenticationManagementApplication/
    ports:
      - "8090:8090"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.password=12345
      - spring.datasource.username=root
      - spring.datasource.url=jdbc:mysql://mysql-service:3306/demo
      - spring.kafka.producer.bootstrap-servers=broker:9092
    depends_on:
      - eureka-server
      - mysql-service
      - broker

  payment-service:
    container_name: payment-service
    build: payment-service/
    restart: always
    ports:
      - "8087:8087"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.password=12345
      - spring.datasource.username=root
      - spring.datasource.url=jdbc:mysql://mysql-service:3307/orders
    depends_on:
      - eureka-server
      - mysql-service
